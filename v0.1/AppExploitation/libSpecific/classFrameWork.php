<?php

class FrameWork {

    CONST CODE_PREFIX               = 'Code';
    CONST CODE_FUNC_TEST_PREFIX     = 'traitTest';
    CONST TYPE_MIXTED               = 'Mixted';

    private static $dataLanguage    = DataNeo4j::LANGUAGE;
    private static $codeLanguage    = CodePhp::LANGUAGE;

    public static $conf;
    public static $attributList     = array();
    public static $labelList        = array();
    public static $microServiceList = array();
    public static $relationShipList = array();
    public static $indexList        = array();
    public static $nodeList         = array();

    public function configure() {

        $this->translateFunctionnally();
        $this->translateTechnically();
    }
    private function translateFunctionnally() {

        foreach(self::$conf->nodeList as $nodeVarName => $nodeConf) {

            Node::add($nodeVarName, $nodeConf);
        }
        foreach(self::$conf->microServiceDefaultList as $microserviceName => $microserviceConf) {

            Attribut::add($microserviceConf);
            Label::add($microserviceConf);
            MicroService::add($microserviceName, $microserviceConf);
            RelationShip::add($microserviceConf);
        }
        foreach(self::$conf->indexList as $index) {

            Index::add($index);
        }
        return true;
    }
    private function translateTechnically() {

        $this->translateForData();
        $this->translateForLanguage();

        return true;
    }

    private function translateForData() {

        foreach(self::$labelList as $labelObj) {

             echo '<pre>';
             var_export($labelObj);
             echo '</pre>';
             exit();
        }

    }

    private function translateForLanguage() {

    }
}

?>