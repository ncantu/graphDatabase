<?php

require_once '../libPhp/traitApp.php';

class ConfigManager {

    use TraitApp;

    CONST CODE_PREFIX               = 'Code';
    CONST CODE_FUNC_TEST_PREFIX     = 'traitTest';
    CONST TYPE_MIXTED               = 'Mixted';
    CONST EXECUTION_TIME_LIMIT      = 120;
    CONST CONF_VERSION              = 'v0.0';
    CONST CONF_FILE_BASENAME        = 'confManager';

    public static $attributList     = array();
    public static $labelList        = array();
    public static $microServiceList = array();
    public static $relationShipList = array();
    public static $indexList        = array();
    public static $nodeList         = array();

    public $classList               = array('Index', 'Attribut', 'Label', 'MicroService', 'MicroServiceReturn', 'Node', 'RelationShip');
    public $traitList               = array();

    public function run() {

        $this->codeConfigure();
/*
        echo '<pre>';
        var_export(get_class_vars('ConfigManager'));
        echo '</pre>';
*/
    }

    public function codeConfigure() {

        $this->translateFunctionnally();
        $this->translateTechnically();
    }

    private function translateFunctionnally() {

        foreach(self::$conf->nodeList as $nodeVarName => $nodeConf) {

            Node::add($nodeVarName, $nodeConf);
        }
        foreach(self::$conf->microServiceDefaultList as $microserviceName => $microserviceConf) {

            Attribut::add($microserviceConf);
            Label::add($microserviceConf);
            MicroService::add($microserviceName, $microserviceConf);
            RelationShip::add($microserviceConf);
        }
        foreach(self::$conf->indexList as $index) {

            Index::add($index);
        }
        return true;
    }
    private function translateTechnically() {

        $this->translateForData();
        $this->translateForLanguage();

        return true;
    }

    private function translateForData() {

        foreach(self::$labelList as $labelObj) {

            echo '<pre>';
            var_export($labelObj);
            echo '</pre>';
            exit();
        }

    }

    private function translateForLanguage() {

    }
}

new ConfigManager();
?>